# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
    serviceName: 'SpringBootHelloWorld'
    artifactPath: 'SpringBootHelloWorld'
    artifactName: 'SpringBootHelloWorld'

pool:
  vmImage: 'ubuntu-latest'

#- task: Maven@3
#  inputs:
#    mavenPomFile: 'pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'clean package deploy' 


stages:
- stage: BuildAndPublish
  displayName: 'Build And Publish'
  jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: false
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: settings.xml
    - powershell: New-Item -Type Directory -Force "${HOME}/.m2"
    - powershell: Copy-Item -Force "$(Agent.TempDirectory)/settings.xml" "${HOME}/.m2/settings.xml"
    - task: Maven@3
      inputs:
        mavenPomFile: pom.xml
        mavenAuthenticateFeed: true
        goals: clean package

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '|**/*!.git/**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - script: dir
      workingDirectory: $(Build.ArtifactStagingDirectory)
      displayName: List contents of a staging Directory


    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: $(serviceName)

- stage: dev
  jobs:
  - deployment: dev
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'QA'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: $(serviceName)
          - script: dir
            workingDirectory: $(Pipeline.Workspace)
            displayName: List contents of a folder
          
          - task: Maven@3
            inputs:
              mavenPomFile: $(Pipeline.Workspace)/pom.xml'
              goals: 'deploy -DmuleDeploy -Danypoint.environment=Sandbox -Denv=QA'
              mavenAuthenticateFeed: true


- stage: staging
  jobs:
  - deployment: UAT
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'stage'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Maven@3
            inputs:
              mavenPomFile: '$(serviceName)/pom.xml'
              goals: 'deploy -DmuleDeploy -Danypoint.environment=dev -Denv=uat'
              mavenAuthenticateFeed: true
        
- stage: Live
  jobs:
  - deployment: Prod
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'Prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Maven@3
            inputs:
              mavenPomFile: '$(serviceName)/pom.xml'
              goals: 'deploy -DmuleDeploy -Danypoint.environment=dev -Denv=uat'
              mavenAuthenticateFeed: true
